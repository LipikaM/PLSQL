CREATE OR REPLACE PROCEDURE TEDOWNER.Aab_Update_Summary IS
--################################################################################################################
--Modification History
-- ---------------------------------------------------------------------------------------------------------------
--Date           :  18/06/2012
--Author         :  TEDS BAU (Mayuree Yerawar)
--Purpose        :  Finance table changes updation, updating retention period to 38
--################################################################################################################

Counter           NUMBER := 0;
v_AabProcessDate  DATE;
v_PartitionId     VARCHAR2(8);
v_Location        VARCHAR2(100);
v_BillStart       DATE;
v_PeriodId        NUMBER;
v_TopUpLoadedFlag VARCHAR2(1);
v_partn_date      VARCHAR2(15);
sqlst  VARCHAR2(1000);
recon_Amount   NUMBER:=0;

CURSOR C_Cur_Recharge IS
SELECT
   Msisdn,
   SUM(Amount) Recharge_Amount
FROM
   IN_RECHARGE
WHERE
   Recharge_Dt >= v_AabProcessDate AND
   Recharge_Dt <  v_AabProcessDate + 1
HAVING SUM(AMOUNT) <> 0
GROUP BY Msisdn;

PROCEDURE drop_partition IS
BEGIN
 FOR i IN (   SELECT partition_name
               FROM
                       (SELECT partition_name
                        FROM   user_tab_partitions
                        WHERE  table_name = 'AAB_SUMMARY')
               WHERE  TO_DATE(SUBSTR(partition_name,6),'dd/mm/yyyy') <=
                      --to_date(to_char((sysdate-35),'dd/mm/yyyy'),'dd/mm/yyyy')
                  TO_DATE(TO_CHAR((SYSDATE-39),'dd/mm/yyyy'),'dd/mm/yyyy')
             )
    LOOP
            --dbms_output.put_line('pname '||i.partition_name);
            EXECUTE IMMEDIATE ' alter table aab_summary drop partition '||i.partition_name;
    END LOOP;
END;

BEGIN
   LOOP
       v_Location := 'Getting call date from Aab_Call_Control table';
       SELECT
          Aab_Process_Date
       INTO
          v_AabProcessDate
       FROM
          AAB_PROCESS_CONTROL;

       DBMS_OUTPUT.PUT_LINE('We are trying to load data for '||v_AabProcessDate);

       v_Location := 'Determine the period_Id FOR the DATE FOR which we want TO load data';
       v_PeriodId := TO_CHAR(v_AabProcessDate, 'd');

       v_Location := 'Determining the BillStart date for '||v_PeriodId;
       SELECT
          TRUNC(BillStart)
       INTO
          v_BillStart
       FROM
          SMP_INCDRSTOR
       WHERE
          PeriodId = v_PeriodId AND
          ROWNUM < 2;

       DBMS_OUTPUT.PUT_LINE('SMP_INCDRSTOR TABLE contains the data FOR '||v_BillStart);

       v_Location := 'Determining if the topup data is available in the In_Recharge Table';
       BEGIN
          SELECT
             'Y'
          INTO
             v_TopUpLoadedFlag
          FROM
             IN_RECHARGE
          WHERE
             Recharge_Dt >= v_AabProcessDate + 1 AND
             ROWNUM < 2;
          DBMS_OUTPUT.PUT_LINE('In_Recharge TABLE contains the data FOR '||v_BillStart);
       EXCEPTION
          WHEN NO_DATA_FOUND THEN
             DBMS_OUTPUT.PUT_LINE('In_Recharge TABLE does not contain the data FOR '||v_BillStart);
             v_TopUpLoadedFlag := 'N';
       END;

       IF v_BillStart = v_AabProcessDate AND v_TopUpLoadedFlag = 'Y' THEN
          DBMS_OUTPUT.PUT_LINE('We need TO load the data FOR v_BillStart');

          v_Location := 'calculating the PartitionId';
          --v_PartitionId := MOD(TO_CHAR(v_BillStart, 'J') ,40) + 1;

          v_PartitionId := TO_CHAR(v_AabProcessDate,'ddmmyyyy');
          v_partn_date:=TO_CHAR(v_aabprocessdate+1,'dd/mm/yyyy');
          DBMS_OUTPUT.PUT_LINE('Partition_Id FOR dataload IS '||v_partitionId||'  '||v_partn_date);

          EXECUTE IMMEDIATE 'alter table aab_summary add partition prdt_'||v_partitionid||' VALUES LESS THAN (TO_DATE ('''||v_partn_date||''', ''DD/MM/YYYY'')) ';

          --v_Location := 'Truncating the PARTITION HAVING OLD data';
          --Cc_New_Truncate_Partition('AAB_SUMMARY', 'PART'||v_PartitionId);

          EXECUTE IMMEDIATE 'TRUNCATE TABLE AAB_DETAIL_SUMMARY';

          DBMS_OUTPUT.PUT_LINE('Dataload started AT '||TO_CHAR(SYSDATE, 'DD-MON-YYYY HH24:MI:SS'));
          v_Location := 'INSERTING data INTO AAB_DETAIL_SUMMARY TABLE';
          INSERT INTO AAB_DETAIL_SUMMARY
             (PARTITION_ID,
              SUBSCRIBER,
              CALL_FREQUENCY,
              Process_DATE)
          SELECT
             v_PartitionId,
             Subscriber,
             COUNT(*),
             TO_CHAR(BillStart,'YYYYMMDD')
          FROM
              SMP_INCDRSTOR
          WHERE
              PeriodId = v_PeriodId AND
              Serviceprovider  <> 0 AND
              Calledparty <> '0008783085' AND
              Calltype IN (0,1,2,12,13)
          GROUP BY
              v_PartitionId,
              Subscriber,
              TO_CHAR(BillStart,'YYYYMMDD');


          FOR i IN c_Cur_Recharge LOOP

               UPDATE AAB_DETAIL_SUMMARY
               SET    Recharge_Amount = i.Recharge_Amount
               WHERE  Subscriber = i.Msisdn;

               IF SQL%NOTFOUND THEN
                  INSERT INTO AAB_DETAIL_SUMMARY
                     (Partition_Id,
                      Subscriber,
                      CALL_FREQUENCY,
                      Recharge_Amount,
                      Process_Date)
                  VALUES
                     (v_Partitionid,
                      i.Msisdn,
                      NULL,
                      i.Recharge_Amount,
                      TO_CHAR(v_AabProcessDate, 'YYYYMMDD'));
               END IF;

               Counter := Counter + 1;
               /*IF Counter = 10000 THEN
                  EXIT;
               END IF;*/

          END LOOP;



          v_Location := 'Inserting data into Aab_Summary table';
          INSERT INTO AAB_SUMMARY
          SELECT subscriber,call_frequency,Recharge_Amount,TO_DATE(process_date,'yyyy/mm/dd') FROM AAB_DETAIL_SUMMARY;

         BEGIN
            SELECT  NO INTO recon_amount
            FROM
            ((SELECT '3' NO,SUM(Amount) amount
            FROM  IN_RECHARGE
            WHERE Recharge_Dt >= v_AabProcessDate AND
               Recharge_Dt <  v_AabProcessDate +1
            MINUS
            SELECT '3' NO,SUM(Recharge_Amount) amount  FROM AAB_SUMMARY WHERE
            process_date=v_AabProcessDate
            )
            UNION ALL
            (SELECT '4' NO,SUM(Recharge_Amount)  amount FROM AAB_SUMMARY WHERE
            process_date=v_AabProcessDate
            MINUS
            SELECT '4' NO,SUM(Amount) Amount
            FROM  IN_RECHARGE
            WHERE Recharge_Dt >= v_AabProcessDate AND
               Recharge_Dt <  v_AabProcessDate +1
            ));
            EXCEPTION
            WHEN NO_DATA_FOUND THEN
               DBMS_OUTPUT.PUT_LINE ('reconciliation status ' ||recon_amount);
               recon_amount:=1;
         END;

          DBMS_OUTPUT.PUT_LINE('Dataload ended AT '||TO_CHAR(SYSDATE, 'DD-MON-YYYY HH24:MI:SS'));

          v_Location := 'UPDATE Control TABLE';
          UPDATE AAB_PROCESS_CONTROL
          SET Aab_Process_Date = v_AabProcessDate + 1;

       ELSE
         DBMS_OUTPUT.PUT_LINE('No further dataloading can happen AT this TIME.');
         DBMS_OUTPUT.PUT_LINE('Please CHECK SMP_INCDRSTOR TABLE AND IN_RECHARGE TABLE FOR recent data');
         EXIT;
       END IF;

   END LOOP;
   -- Added 04/02 to do the recon between in_recharge and aab_summary
   IF recon_amount = 1 THEN
       COMMIT;
       DBMS_OUTPUT.PUT_LINE('data has been committed for '||v_Aabprocessdate);
   ELSE
       DBMS_OUTPUT.PUT_LINE('reconcilaition had failed for ' ||v_Aabprocessdate);
   END IF;


   drop_partition;

EXCEPTION
  WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('Failed at location :  '||v_Location);
    RAISE;
END;
/